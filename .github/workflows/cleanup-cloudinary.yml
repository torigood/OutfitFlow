name: Cleanup Cloudinary Orphaned Images

on:
  # 매주 일요일 오전 3시 (UTC 기준) 자동 실행
  schedule:
    - cron: "0 3 * * 0"

  # 수동 실행 가능 (GitHub Actions 탭에서 "Run workflow" 버튼)
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry run mode (test without deleting)"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # 1. 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Node.js 18 설정
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      # 3. 의존성 설치 (cloudinary, firebase-admin만)
      - name: Install dependencies
        run: |
          npm install cloudinary firebase-admin

      # 4. 정리 스크립트 실행
      - name: Run cleanup script
        env:
          # ⚠️ GitHub Secrets에서 가져옴 (저장소 Settings → Secrets에서 설정)
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
        run: node scripts/cleanup-orphaned-images.js

      # 5. 결과 요약 (성공/실패)
      - name: Summary
        if: always()
        run: |
          echo "## Cleanup Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dry Run**: ${{ github.event.inputs.dry_run || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time**: $(date -u)" >> $GITHUB_STEP_SUMMARY
